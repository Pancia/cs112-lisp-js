; REG DEF
(def x)
(def y 2)
(def x y)
(def x (+ 1 2))
(def y [1 2])
; DEF WITH SPACES AND NO VALUE
( def x)
(def x )
( def x )
; DEF WITH SPACES AND VALUE
( def x 1)
(def x 1 )
( def x 1 )
; DEF WITH FN
(def y (fn [x] (print x)))
(def z (fn [] (print "hello")))
(def a (fn [] ()))
; DEF WITH FN AND SPACES
( def y (fn [x] (print x)))
(def y (fn [x] (print x)) )
( def y (fn [x] (print x)) )
; FN
(print ((fn [] ())))
(print ((fn [x] ()) 1))
(print ((fn [x] (print x)) 4))
(print ((fn [x y] ()) 2 5))
(print ((fn [x y] (print (+ x y))) 1 9))
(print ((fn [x y z] (print "first") (print (+ x y z))) 1 1 1))
; FN WITH SPACES
(print (( fn [x] (print x)) 7))
(print ((fn [x] (print x) ) 12))

